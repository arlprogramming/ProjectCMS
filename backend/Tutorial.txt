1. npm init
2. npm i --save sequelize
3. npm i --save tedious
4. membuat index.js (copas dari web sequelize)
    ambil dibawah ini :
    const { Sequelize } = require("sequelize");

    ---> Konfigurasi ke DB dengan sequelize biasa
    const sequelize = new Sequelize("DB_MEDICAL", "appims", "P4sssw0rd", {
    host: "PRAISINDO",
    dialect: "mssql",
    });
5. membuat test connection di index.js

//Membuat CRUD dengan Sequelize biasa
6. tambahkan raw query sequelize seperti dibawah ini setelah await test connection
    const { QueryTypes } = require('sequelize'); --> hini tempatkan dibawa import
    const users = await sequelize.query("SELECT * FROM `users`", { type: QueryTypes.SELECT });

    note: query di atas bisa diganti dengan query apapun sesuai sql server.

//membuat CRUD dengan ORM sequelize
7. instal Sequelize-cli : npm install --save-dev sequelize-cli
8. init : npx sequelize-cli init
9. setelah init akan ada 4 folder baru : config, migrations, models, seeders
    seeder : untuk membuat record-record awal kedalam table
10. konfigurasi kedalam database di config 

    note : kalo pake ORM konfigurasi ke DB nya disini. dan bisa menetukan saat kita dev pakai DB mana , saat testing    
           pakai DB mana visa di sini.
11. membuat first model dan migration / membuat table baru :
   npx sequelize-cli model:generate --name User --attributes firstName:string,lastName:string,email:string

    hasil diatas akan disimpan dahulu disini :

    New model was created at C:\Users\USER\Downloads\Rully\Training\ReactJs\Project\ProjectCMS\backend\models\tb_m_user.js .

    New migration was created at C:\Users\USER\Downloads\Rully\Training\ReactJs\Project\ProjectCMS\backend\migrations\20230109170801-create-tb-m-user.js
12. jalankan migration nya / supaya terbuat tablenya di sql server :
    npx sequelize-cli db:migrate

    note : selain TB_M_USER otomatis terbuat table dbo.SequelizeMeta yang isinya Log dari apa yang udah di squelize
            jika kita salah bikin table bisa di UNDO dengan cara npx sequelize-cli db:migrate:undo. dengan adanya sequlize Migration ini jika kita bekerja secara team dan ini membuat table nya hanya kirim file yang ada di folder 'models' dan 'migration'

13. SEEDING / seeders / menambahkan data ke table yang ada
    membuat file seeders : npx sequelize-cli seed:generate --name demo-user 

    hasilnya :

    module.exports = {
  up: (queryInterface, Sequelize) => {
    return queryInterface.bulkInsert('Users', [{
      firstName: 'John',
      lastName: 'Doe',
      email: 'example@example.com',
      createdAt: new Date(),
      updatedAt: new Date()
    }]);
  },
  down: (queryInterface, Sequelize) => {
    return queryInterface.bulkDelete('Users', null, {});
  }
};

    execute seeders yang sudah dibuat :

    npx sequelize-cli db:seed:all
    npx sequelize-cli db:seed:all:undo

14. Membuat CRUD dengan ORM Sequelize
    Membuat file create.js
    